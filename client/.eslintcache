[{"/Users/pagaia/Activism/cico-contaiciclisti/client/src/reportWebVitals.js":"1","/Users/pagaia/Activism/cico-contaiciclisti/client/src/index.js":"2","/Users/pagaia/Activism/cico-contaiciclisti/client/src/App.js":"3","/Users/pagaia/Activism/cico-contaiciclisti/client/src/utility/utilityFunctions.js":"4","/Users/pagaia/Activism/cico-contaiciclisti/client/src/utility/constants.js":"5","/Users/pagaia/Activism/cico-contaiciclisti/client/src/components/YesterdayHourly.js":"6","/Users/pagaia/Activism/cico-contaiciclisti/client/src/components/DailyAverage.js":"7","/Users/pagaia/Activism/cico-contaiciclisti/client/src/components/HourlyAverage.js":"8","/Users/pagaia/Activism/cico-contaiciclisti/client/src/components/About.js":"9","/Users/pagaia/Activism/cico-contaiciclisti/client/src/components/LastCount.js":"10","/Users/pagaia/Activism/cico-contaiciclisti/client/src/components/footer.js":"11","/Users/pagaia/Activism/cico-contaiciclisti/client/src/components/Footer.js":"12","/Users/pagaia/Activism/cico-contaiciclisti/client/src/components/ScrollTo.js":"13","/Users/pagaia/Activism/Cico/contaiciclisti/client/src/App.js":"14","/Users/pagaia/Activism/Cico/contaiciclisti/client/src/components/YesterdayHourly.js":"15","/Users/pagaia/Activism/Cico/contaiciclisti/client/src/components/Footer.js":"16","/Users/pagaia/Activism/Cico/contaiciclisti/client/src/utility/utilityFunctions.js":"17"},{"size":362,"mtime":1607794596704,"results":"18","hashOfConfig":"19"},{"size":514,"mtime":1607882939367,"results":"20","hashOfConfig":"19"},{"size":1560,"mtime":1607883828939,"results":"21","hashOfConfig":"19"},{"size":5849,"mtime":1607875382867,"results":"22","hashOfConfig":"19"},{"size":786,"mtime":1607869609121,"results":"23","hashOfConfig":"19"},{"size":1350,"mtime":1607882830596,"results":"24","hashOfConfig":"19"},{"size":2160,"mtime":1607882806962,"results":"25","hashOfConfig":"19"},{"size":1387,"mtime":1607882817574,"results":"26","hashOfConfig":"19"},{"size":1540,"mtime":1607881651272,"results":"27","hashOfConfig":"19"},{"size":1468,"mtime":1607880387538,"results":"28","hashOfConfig":"19"},{"size":244,"mtime":1607881722821,"results":"29","hashOfConfig":"19"},{"size":300,"mtime":1607883890367,"results":"30","hashOfConfig":"19"},{"size":449,"mtime":1607883818936,"results":"31","hashOfConfig":"19"},{"size":1583,"mtime":1607964349197,"results":"32","hashOfConfig":"33"},{"size":1350,"mtime":1607951975977,"results":"34","hashOfConfig":"33"},{"size":300,"mtime":1607951975978,"results":"35","hashOfConfig":"33"},{"size":5849,"mtime":1607951975983,"results":"36","hashOfConfig":"33"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"chyk9i",{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dz142w",{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/pagaia/Activism/cico-contaiciclisti/client/src/reportWebVitals.js",[],["76","77"],"/Users/pagaia/Activism/cico-contaiciclisti/client/src/index.js",["78"],"/Users/pagaia/Activism/cico-contaiciclisti/client/src/App.js",[],["79","80"],"/Users/pagaia/Activism/cico-contaiciclisti/client/src/utility/utilityFunctions.js",["81","82","83","84","85"],"/**\n * calculate the start and end date for today\n */\nexport const getBeginningOfToday = () => {\n  let start = new Date();\n  return start.toISOString().split(\"T\")[0];\n};\n\n/**\n * calculate the start and end date for yesterday\n */\nexport const getYesterdayStartEnd = () => {\n  let end = new Date();\n  let start = new Date(end);\n\n  start.setDate(start.getDate() - 1);\n\n  end = end.toISOString().split(\"T\")[0];\n  start = start.toISOString().split(\"T\")[0];\n\n  return { start, end };\n};\n\n/**\n * calculate the start and end date for previous month\n */\nexport const getLastMonthStartEnd = () => {\n  let end = new Date();\n  end.setDate(1);\n  let start = new Date(end);\n  start.setMonth(start.getMonth() - 1);\n\n  end = end.toISOString().split(\"T\")[0];\n  start = start.toISOString().split(\"T\")[0];\n\n  return { start, end };\n};\n\n\n/**\n * This function gets the list of counts and device information and build labels and datasets for hourly counts\n *\n * @param {Array} feeds\n * @param {Object} device\n */\nexport const buildDataHourly = (feeds, device) => {\n  const { name: label, bgColor, borderColor, hbgColor } = device;\n\n  const labels = [];\n  const datasets = [\n    {\n      label,\n      backgroundColor: bgColor || \"rgba(54, 162, 235, 0.2)\",\n      borderColor: borderColor || \"rgba(54, 162, 235, 1)\",\n      borderWidth: 1,\n      hoverBackgroundColor: hbgColor || \"rgba(255,99,132,0.4)\",\n      // hoverBorderColor: \"rgba(255,99,132,1)\",\n      data: [],\n    },\n  ];\n\n  feeds.forEach((feed) => {\n    if (feed.field1) {\n      const hour =\n        feed.created_at.substring(11, 12) === \"0\"\n          ? feed.created_at.substring(12, 13)\n          : feed.created_at.substring(11, 13);\n      labels.push(hour);\n      datasets[0].data.push(parseInt(feed.field1, 10));\n    }\n  });\n  return { labels, datasets };\n};\n\n/**\n * Utility function to sum up an array of numbers\n * @param {Number} accumulator\n * @param {Number} currentValue\n */\nconst sumReducer = (accumulator, currentValue) => accumulator + currentValue;\n\n/**\n *  This function gets the list of counts and device information and build labels and datasets for Daily Average counts\n *\n * @param {Array} feeds\n * @param {Object} device\n */\nexport const buildDataDailyAverage = (feeds, device) => {\n  const { name: label, bgColor, borderColor, hbgColor } = device;\n\n  const labels = [\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n    \"Sunday\",\n  ];\n\n  const dataset = {\n    label,\n    backgroundColor: bgColor || \"rgba(54, 162, 235, 0.2)\",\n    borderColor: borderColor || \"rgba(54, 162, 235, 1)\",\n    borderWidth: 1,\n    hoverBackgroundColor: hbgColor || \"rgba(255,99,132,0.4)\",\n    data: [],\n  };\n\n  const weekDays = [];\n\n  feeds.forEach((feed) => {\n    if (feed.field1) {\n      const day = new Date(feed.created_at);\n      if (weekDays[day.getDay()]) {\n        weekDays[day.getDay()].push(parseInt(feed.field1, 10));\n      } else {\n        weekDays[day.getDay()] = [parseInt(feed.field1, 10)];\n      }\n    }\n  });\n\n  for (let i = 1; i < 7; i++) {\n    dataset.data.push(\n      parseInt(weekDays[i].reduce(sumReducer) / weekDays[i].length, 10)\n    );\n  }\n  dataset.data.push(\n    parseInt(weekDays[0].reduce(sumReducer) / weekDays[0].length, 10)\n  );\n\n  return dataset;\n};\n\n/**\n * This function gets the list of counts and device information and build labels and datasets for hourly Average counts\n *\n * @param {Array} feeds\n * @param {Object} device\n */\nexport const buildHourlyAverage = (feeds, device) => {\n  const { name: label, bgColor, borderColor, hbgColor } = device;\n\n  const labels = [...Array(23).keys()];\n\n  const datasets = [\n    {\n      label: \"Weekdays\",\n      backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n      borderColor: \"rgba(255, 99, 132, 1)\",\n      hoverBackgroundColor: \"rgba(255, 99, 132, 0.6)\",\n      borderWidth: 1,\n      data: [],\n    },\n    {\n      label: \"Saturday\",\n      borderWidth: 1,\n      backgroundColor: \"rgba(54, 162, 235, 0.2)\",\n      borderColor: \"rgba(54, 162, 235, 1)\",\n      hoverBackgroundColor: \"rgba(54, 162, 235, 0.6)\",\n      data: [],\n    },\n    {\n      label: \"Sunday\",\n      borderWidth: 1,\n      backgroundColor: \"rgba(154, 162, 235, 0.2)\",\n      borderColor: \"rgba(154, 162, 235, 1)\",\n      hoverBackgroundColor: \"rgba(154, 162, 235, 0.6)\",\n      data: [],\n    },\n  ];\n\n  const weekDays = [];\n  const saturday = [];\n  const sunday = [];\n\n  feeds.forEach((feed) => {\n    if (feed.field1) {\n      const day = new Date(feed.created_at).getDay();\n      const hour = new Date(feed.created_at).getHours();\n\n      // Sunday\n      if (day === 0) {\n        if (sunday[hour]) {\n          sunday[hour].push(parseInt(feed.field1, 10));\n        } else {\n          sunday[hour] = [parseInt(feed.field1, 10)];\n        }\n      }\n      // Saturday\n      if (day === 6) {\n        if (saturday[hour]) {\n          saturday[hour].push(parseInt(feed.field1, 10));\n        } else {\n          saturday[hour] = [parseInt(feed.field1, 10)];\n        }\n      }\n\n      // weekdays\n      if (1 <= day <= 5) {\n        if (weekDays[hour]) {\n          weekDays[hour].push(parseInt(feed.field1, 10));\n        } else {\n          weekDays[hour] = [parseInt(feed.field1, 10)];\n        }\n      }\n    }\n  });\n\n  // adding hourly Average  for week days\n  weekDays.forEach((hour) => {\n    datasets[0].data.push(parseInt(hour.reduce(sumReducer) / hour.length, 10));\n  });\n\n  // adding hourly Average  for saturday\n  saturday.forEach((hour) => {\n    datasets[1].data.push(parseInt(hour.reduce(sumReducer) / hour.length, 10));\n  });\n\n  // adding hourly Average  for sunday\n  sunday.forEach((hour) => {\n    datasets[2].data.push(parseInt(hour.reduce(sumReducer) / hour.length, 10));\n  });\n\n  return { labels, datasets };\n};\n\n/**\n * random key genrator for ChartJs\n */\nexport const datasetKeyProvider = () => {\n  return btoa(Math.random()).substring(0, 12);\n};\n","/Users/pagaia/Activism/cico-contaiciclisti/client/src/utility/constants.js",[],"/Users/pagaia/Activism/cico-contaiciclisti/client/src/components/YesterdayHourly.js",["86"],"/Users/pagaia/Activism/cico-contaiciclisti/client/src/components/DailyAverage.js",["87","88"],"/Users/pagaia/Activism/cico-contaiciclisti/client/src/components/HourlyAverage.js",["89"],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { REGEX_DEVICE } from \"../utility/constants\";\nimport {\n  buildHourlyAverage,\n  getLastMonthStartEnd,\n} from \"../utility/utilityFunctions\";\n\nconst deviceUrl = \"https://api.thingspeak.com/channels/DEVICE/feeds.json\";\n\nconst { start, end } = getLastMonthStartEnd();\n\nfunction HourlyAverage({ device }) {\n  // initialize dataset with empty array\n  const [datasets, setDatasets] = useState({});\n\n  async function fetchDeviceData() {\n    // replace with channelID\n    const apiEndPoint =\n      deviceUrl.replace(REGEX_DEVICE, device.channelId) +\n      `?start=${start}&end=${end}`;\n\n    // fetch data from a url endpoint\n    const response = await axios.get(apiEndPoint);\n    const { data } = response;\n    const builtDataset = buildHourlyAverage(data.feeds, device);\n    setDatasets(builtDataset);\n  }\n\n  useEffect(() => {\n    fetchDeviceData();\n  }, []);\n\n  if (!datasets.datasets) {\n    return null;\n  }\n  return (\n    <div className=\"row\">\n      <div className=\"col-sm\">\n        <div className=\"chart-wrapper\">\n          <Bar\n            data={datasets}\n            width={100}\n            height={50}\n            options={{\n              maintainAspectRatio: true,\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HourlyAverage;\n","/Users/pagaia/Activism/cico-contaiciclisti/client/src/components/About.js",[],"/Users/pagaia/Activism/cico-contaiciclisti/client/src/components/LastCount.js",["90"],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { REGEX_DEVICE } from \"../utility/constants\";\nimport { format } from \"timeago.js\";\n\nconst deviceUrl = \"https://api.thingspeak.com/channels/DEVICE/feeds/last.json\";\n\nfunction LastCount({ device }) {\n  const [counts, setCounts] = useState({});\n\n  // replace with channelID\n  const apiEndPoint = deviceUrl.replace(REGEX_DEVICE, device.channelId);\n\n  const getCount = async () => {\n    let res = await axios.get(apiEndPoint);\n    let { data } = res;\n    setCounts(data);\n  };\n\n  useEffect(() => {\n    getCount();\n  }, []);\n\n  return (\n    <div className=\"last-counter\">\n      <div className=\"card last\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">Last count</h5>\n          <p className=\"card-text inverted\">{counts.field1}</p>\n          <footer className=\"blockquote-footer\">\n            {\n              // format date string\n              format(counts.created_at)\n            }\n          </footer>\n        </div>\n      </div>\n\n      <div className=\"card last\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">Total today</h5>\n          <p className=\"card-text inverted\">{counts.field8}</p>\n          <footer className=\"blockquote-footer\">\n            {\n              // format date string\n              format(counts.created_at)\n            }\n          </footer>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default LastCount;\n","/Users/pagaia/Activism/cico-contaiciclisti/client/src/components/footer.js",[],"/Users/pagaia/Activism/cico-contaiciclisti/client/src/components/Footer.js",["91"],"/Users/pagaia/Activism/cico-contaiciclisti/client/src/components/ScrollTo.js",[],"/Users/pagaia/Activism/Cico/contaiciclisti/client/src/App.js",[],"/Users/pagaia/Activism/Cico/contaiciclisti/client/src/components/YesterdayHourly.js",["92"],"/Users/pagaia/Activism/Cico/contaiciclisti/client/src/components/Footer.js",["93"],"/Users/pagaia/Activism/Cico/contaiciclisti/client/src/utility/utilityFunctions.js",["94","95","96","97","98"],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":5,"column":8,"nodeType":"105","messageId":"106","endLine":5,"endColumn":23},{"ruleId":"99","replacedBy":"107"},{"ruleId":"101","replacedBy":"108"},{"ruleId":"103","severity":1,"message":"109","line":91,"column":9,"nodeType":"105","messageId":"106","endLine":91,"endColumn":15},{"ruleId":"103","severity":1,"message":"110","line":142,"column":17,"nodeType":"105","messageId":"106","endLine":142,"endColumn":22},{"ruleId":"103","severity":1,"message":"111","line":142,"column":24,"nodeType":"105","messageId":"106","endLine":142,"endColumn":31},{"ruleId":"103","severity":1,"message":"112","line":142,"column":33,"nodeType":"105","messageId":"106","endLine":142,"endColumn":44},{"ruleId":"103","severity":1,"message":"113","line":142,"column":46,"nodeType":"105","messageId":"106","endLine":142,"endColumn":54},{"ruleId":"114","severity":1,"message":"115","line":33,"column":6,"nodeType":"116","endLine":33,"endColumn":8,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":49,"column":31,"nodeType":"120","messageId":"121","endLine":49,"endColumn":33},{"ruleId":"114","severity":1,"message":"122","line":54,"column":6,"nodeType":"116","endLine":54,"endColumn":8,"suggestions":"123"},{"ruleId":"114","severity":1,"message":"115","line":33,"column":6,"nodeType":"116","endLine":33,"endColumn":8,"suggestions":"124"},{"ruleId":"114","severity":1,"message":"125","line":22,"column":6,"nodeType":"116","endLine":22,"endColumn":8,"suggestions":"126"},{"ruleId":"103","severity":1,"message":"127","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":16},{"ruleId":"114","severity":1,"message":"115","line":33,"column":6,"nodeType":"116","endLine":33,"endColumn":8,"suggestions":"128"},{"ruleId":"103","severity":1,"message":"127","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":16},{"ruleId":"103","severity":1,"message":"109","line":91,"column":9,"nodeType":"105","messageId":"106","endLine":91,"endColumn":15},{"ruleId":"103","severity":1,"message":"110","line":142,"column":17,"nodeType":"105","messageId":"106","endLine":142,"endColumn":22},{"ruleId":"103","severity":1,"message":"111","line":142,"column":24,"nodeType":"105","messageId":"106","endLine":142,"endColumn":31},{"ruleId":"103","severity":1,"message":"112","line":142,"column":33,"nodeType":"105","messageId":"106","endLine":142,"endColumn":44},{"ruleId":"103","severity":1,"message":"113","line":142,"column":46,"nodeType":"105","messageId":"106","endLine":142,"endColumn":54},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar",["129"],["130"],"'labels' is assigned a value but never used.","'label' is assigned a value but never used.","'bgColor' is assigned a value but never used.","'borderColor' is assigned a value but never used.","'hbgColor' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchDeviceData'. Either include it or remove the dependency array.","ArrayExpression",["131"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'devices'. Either include it or remove the dependency array.",["132"],["133"],"React Hook useEffect has a missing dependency: 'getCount'. Either include it or remove the dependency array.",["134"],"'ScrollTo' is defined but never used.",["135"],"no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"136","fix":"140"},{"desc":"141","fix":"142"},{"desc":"136","fix":"143"},"Update the dependencies array to be: [fetchDeviceData]",{"range":"144","text":"145"},"Update the dependencies array to be: [devices]",{"range":"146","text":"147"},{"range":"148","text":"145"},"Update the dependencies array to be: [getCount]",{"range":"149","text":"150"},{"range":"151","text":"145"},[973,975],"[fetchDeviceData]",[1494,1496],"[devices]",[964,966],[593,595],"[getCount]",[973,975]]